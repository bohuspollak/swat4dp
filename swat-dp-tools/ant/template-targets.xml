<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- ================================================================================================= -->
<!-- schlag&rahm WebSphere Administration Toolkit for IBM WebSphere DataPower SOA appliances (Swat4DP) -->
<!-- Copyright © 2013 schlag&rahm AG, Switzerland. All rights reserved. -->
<!-- ================================================================================================= -->

<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.8.2 or above. -->
<!-- ====================================================================== -->
<project name="swat-dp-tools.template-targets" default="info" basedir=".">

	<dirname file="${ant.file.swat-dp-tools.template-targets}" property="ant_templatetargets.dir" />
	<import file="${ant_templatetargets.dir}/taskdefs.xml" />
	<import file="${ant_templatetargets.dir}/chooser.xml" />

	<!-- - - - - - - - - - - - - - - - - - 
		  target: info 
		 - - - - - - - - - - - - - - - - - -->
	<target name="info">
		<echo message="Common template targets for swat-dp-tools" />
		<echoproperties prefix="swat" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
		  target: init 
		 - - - - - - - - - - - - - - - - - -->
	<target name="init">
		<!-- Create a time stamp -->
		<tstamp>
			<format property="FILESTAMP" pattern="yyyyMMdd_HHmmss" />
		</tstamp>
		<echo message="***** template-targets initialized at ${FILESTAMP} *****" />
		<echo message="current basedir = ${basedir}" />
		<echo message="current project = ${ant.project.name}" />
		<echo message="---------- predefined properties ----------" />
		<echoproperties regex="(mgr\.|confirm|overwrite)" />
	</target>

	<!-- ================================= 
          target: seed-service              
         ================================= -->
	<target name="seed-service" depends="init,choose-domain" description="Seed a new service from the template">
		<loadproperties srcfile="${swat.dp.infra}/config/zones/${mgr.target.zone.name}/${mgr.target.zone.name}.properties" />
		<loadproperties srcfile="${swat.dp.infra}/config/zones/${mgr.target.zone.name}/envs/${mgr.target.env.name}/${mgr.target.env.name}.properties" />
		<loadproperties srcfile="${swat.dp.infra}/config/zones/${mgr.target.zone.name}/envs/${mgr.target.env.name}/domains/${mgr.target.domain.alias}.properties" />

		<service-create-project-prefix-macro zone="${swat.zone.short}" domain="${swat.domain.short}" />

		<antform title="Swat4DP Seed Service Project Generator ">
			<label>Provide project information for the new service.</label>
			<textProperty label="Service Name: "
			              property="suffix"
			              tooltip="Suffix of the name of the new service project. (Prefix: ${service.project.prefix})." />
			<textProperty label="Service Object Name: "
			              property="name"
			              tooltip="Name of the new DataPower service object." />
			<selectionproperty label="Service Object Class: "
			                   property="class"
			                   values="MultiProtocolGateway,WSGateway,XMLFirewall,WebTokenService"
			                   tooltip="DataPower specific service class." />
			<textProperty label="Service Summary: " property="summary" tooltip="Short description of the service." />
			<controlbar>
				<button label="Cancel" type="cancel" target="cancel" />
				<button label="Ok" type="ok" />
			</controlbar>
		</antform>

		<fail unless="suffix" message="suffix property not set" />
		<fail unless="name" message="service name property not set" />
		<fail unless="summary" message="service summary property not set" />
		<fail unless="service.project.prefix" message="Project name prefix has not been generated!" />

		<propertyfile file="service.properties.tmp"
		              comment="Temporary filter properties for the service project generator.">
			<entry key="service.project.name" value="${service.project.prefix}-${suffix}" />
			<entry key="service.name" value="${suffix}" />
			<entry key="service.object.name" value="${name}" />
			<entry key="service.summary" value="${summary}" />
			<entry key="service.object.class" value="${class}" />

			<entry key="zone.name" value="${swat.zone.name}" />
			<entry key="env.name" value="${swat.env.name}" />
			<entry key="domain.name" value="${swat.domain.name}" />
		</propertyfile>

		<seed-svc-template-macro filterfile="service.properties.tmp" />

		<delete>
			<fileset dir="${basedir}">
				<include name="service.properties.tmp" />
			</fileset>
		</delete>

	</target>

	<!-- ================================= 
          target: clone-project              
         ================================= -->
	<target name="clone-project"
	        depends="init,choose-domain"
	        description="Clone an existing project and do some pattern replacement">

		<property name="clone.source.dir" value="${basedir}/.." />
		<loadproperties srcfile="${swat.dp.infra}/config/zones/${mgr.target.zone.name}/${mgr.target.zone.name}.properties" />
		<loadproperties srcfile="${swat.dp.infra}/config/zones/${mgr.target.zone.name}/envs/${mgr.target.env.name}/${mgr.target.env.name}.properties" />
		<loadproperties srcfile="${swat.dp.infra}/config/zones/${mgr.target.zone.name}/envs/${mgr.target.env.name}/domains/${mgr.target.domain.alias}.properties" />

		<service-create-project-prefix-macro zone="${swat.zone.short}" domain="${swat.domain.short}" />

		<antform title="DataPower Service Project Cloner ">
			<label>Provide project information .</label>
			<fileSelectionProperty label="Select source project directory : "
			                       property="clone.source.dir"
			                       directoryChooser="true"
			                       tooltip="Location of the project that should be cloned." />
			<textProperty label="Target project name prefix : "
			              property="service.project.prefix"
			              tooltip="New project name prefix. The below service name will be added." />
			<textProperty label="New service name : "
			              property="clone.target.service.name"
			              tooltip="This is the name according to the service.name property." />
			<controlbar>
				<button label="Cancel" type="cancel" target="cancel" />
				<button label="Ok" type="ok" />
			</controlbar>
		</antform>

		<fail unless="service.project.prefix" message="new project prefix property not set" />
		<fail unless="clone.target.service.name" message="new service name property not set" />

		<property name="clone.target.project.name" value="${service.project.prefix}-${clone.target.service.name}" />
		<property name="clone.target.dir" value="${basedir}/../${clone.target.project.name}" />
		<basename file="${clone.source.dir}" property="clone.source.project.name" />

		<property file="${clone.source.dir}/build.properties" />
		<fail unless="service.name"
		      message="Could not read service.name property from ${clone.source.dir}/build.properties" />

		<!-- Copy and filter the template content into the target project (local workspace) -->
		<filterset id="clone.filter" onmissingfiltersfile="ignore">
			<filter token="swat.customer" value="${swat.customer}" />
			<filter token="service.name" value="${clone.target.service.name}" />
			<!--  TODO Do you really need the short names here? -->
			<filter token="zone.name" value="${swat.zone.short}" />
			<filter token="domain.name" value="${swat.domain.short}" />
		</filterset>

		<echo message="Copying source content..." />
		<copy todir="${clone.target.dir}" filtering="true" verbose="true" overwrite="false">
			<fileset dir="${clone.source.dir}" defaultexcludes="false">
				<include name="**/*.*" />
				<include name="**/.cvsignore" />
				<exclude name="**/CVS" />
				<exclude name="**/CVS/**" />
				<exclude name="**/dist/**/*" />
				<exclude name="**/in-work/**/*" />
				<exclude name="**/tmp/**/*" />
				<exclude name="**/*.tmp" />
				<exclude name="**/*.bak" />
			</fileset>
			<filterset refid="clone.filter" />
		</copy>

		<echo message="Renaming files by replacing pattern '${service.name}' with '${clone.target.service.name}' ..." />
		<move todir="${clone.target.dir}" verbose="true" overwrite="false">
			<fileset dir="${clone.target.dir}">
				<include name="**/master/**/*.*" />
				<include name="**/xcfg/**/*.*" />
			</fileset>
			<regexpmapper from="(.*)${service.name}(.*)" to="\1${clone.target.service.name}\2" />
		</move>

		<echo message="Replacing service.name in build.properties ..." />
		<replaceregexp byline="true">
			<regexp pattern="(.*)${service.name}(.*)" />
			<substitution expression="\1${clone.target.service.name}\2" />
			<fileset dir="${clone.target.dir}">
				<include name="build.properties" />
			</fileset>
		</replaceregexp>

		<echo message="Replacing project name in .project and build.xml ..." />
		<replaceregexp byline="true">
			<regexp pattern="${clone.source.project.name}" />
			<substitution expression="${clone.target.project.name}" />
			<fileset dir="${clone.target.dir}">
				<include name=".project" />
				<include name="build.xml" />
			</fileset>
		</replaceregexp>

		<propertyfile file="${clone.target.dir}/build.properties"
		              comment="TODO: change service object name and summary!">
			<entry key="service.name" value="${clone.target.service.name}" />
		</propertyfile>
	</target>


	<!-- Common targets for all services use -->
	<macrodef name="seed-svc-template-macro">
		<attribute name="filterfile" default="${basedir}/service.properties" />
		<sequential>

			<property file="@{filterfile}" />

			<!-- Copy and filter the template content into the target project (local workspace) -->
			<filterset id="content.filter" onmissingfiltersfile="ignore">
				<filter token="swat.customer" value="${swat.customer}" />
				<filtersfile file="@{filterfile}" />
			</filterset>

			<echo message="Copying filtered content..." />
			<copy todir="${basedir}/../${service.project.name}" filtering="true" verbose="true" overwrite="true">
				<fileset dir="content" />
				<filterset refid="content.filter" />
			</copy>
			<!-- Correct the environment properties file by name -->
			<echo message="Renaming resources..." />
			<move file="${basedir}/../${service.project.name}/config/env.properties"
			      tofile="${basedir}/../${service.project.name}/config/${env.name}.properties" />
			<move file="${basedir}/../${service.project.name}/master/common/local/service"
			      tofile="${basedir}/../${service.project.name}/master/common/local/${service.name}" />
		</sequential>
	</macrodef>

</project>