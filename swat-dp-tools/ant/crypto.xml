<?xml version="1.0" encoding="UTF-8"?>

<!-- ================================================================================================= -->
<!-- schlag&rahm WebSphere Administration Toolkit for IBM WebSphere DataPower SOA appliances (Swat4DP) -->
<!-- Licensed Materials - Property of schlag&rahm -->
<!-- Copyright (c) 2010, 2013 schlag&rahm AG, Switzerland. All rights reserved. -->
<!-- Licensed Materials - Property of IBM -->
<!-- Copyright IBM Corporation 2013. All Rights Reserved. -->
<!-- US Government Users Restricted Rights - Use, duplication or disclosure -->
<!-- restricted by GSA ADP Schedule Contract with IBM Corp. -->
<!-- ================================================================================================= -->

<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.8.2 or above. -->
<!-- ====================================================================== -->
<project name="swat-dp-tools.crypto" default="info" basedir=".">

    <dirname file="${ant.file.swat-dp-tools.crypto}" property="ant_crypto.dir" />
    <import file="${ant_crypto.dir}/taskdefs.xml" />

    <!-- ================================= 
          target: info              
         ================================= -->
    <target name="info">
        <echo message="DataPower Crypto Tool macros for swat-dp-tools" />
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: key-generate-on-device                      
         - - - - - - - - - - - - - - - - - -->
    <target name="key-generate-on-device">
        <key-generate-on-device-macro device="${current.device}"
                                      domain="${domain.name}"
                                      crypto.prefix="${current.crypto.prefix}" />
    </target>

    <!-- = = = = = = = = = = = = = = = = =
          macrodef: key-generate-on-device-macro         
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="key-generate-on-device-macro">
        <attribute name="device" />
        <attribute name="env" default="${swat.env.short}" />
        <attribute name="domain" />
        <attribute name="crypto.prefix" />
        <sequential>
            <echo message="run keygen on @{device} - domain: @{domain} - env: @{env}" />
            <load-device-props-macro device="@{device}" />

            <!-- Adjust properties for the crypto prefix -->
            <propertycopy name="local.crypto.cn" from="@{crypto.prefix}.cn" />
            <!-- property name="local.dp.file.name" value="${crypto.object.name}.csr" /-->
            <property name="local.file.name" value="${local.crypto.cn}.csr" />

            <!-- prepare soma-request keygen -->
            <soma-prepare-request-macro soma.request="keygen"
                                        env="@{env}"
                                        domain="@{domain}"
                                        device="@{device}"
                                        tmp.dir="crypto/@{device}"
                                        crypto.prefix="@{crypto.prefix}" />

            <!-- run soma-request keygen on the device -->
            <soma-run-single-request-on-single-device-macro soma.request="keygen"
                                                            device="@{device}"
                                                            tmp.dir="crypto/@{device}"
                                                            check.response="true" />

            <!-- prepare soma-request getfile (download CSR) -->
            <soma-prepare-request-macro soma.request="getfile"
                                        env="@{env}"
                                        domain="@{domain}"
                                        device="@{device}"
                                        dp.file.name="temporary:///${local.file.name}"
                                        tmp.dir="crypto/@{device}" />

            <!-- run soma-request getfile on the device (download CSR) -->
            <soma-run-single-request-on-single-device-macro soma.request="getfile"
                                                            device="@{device}"
                                                            tmp.dir="crypto/@{device}"
                                                            check.response="true" />

            <!-- Extract and decode the CSR file from the response -->
            <extract-file-macro tmp.dir="crypto/@{device}" soma.request="getfile" file.name="${local.file.name}" />

            <!-- Depending on whether mail-sending is enabled, send the csr out, otherwise just log it here -->
            <if>
                <equals arg1="${swat.smtp.enabled}" arg2="true" />
                <then>
                    <!-- check the address... -->
                    <check-mail-address-macro addr.prop="swat.ca.csr.email.address" />

                    <!-- ...and send the CSR to the signer entity -->
                    <send-mail-macro mail.to="${swat.ca.csr.email.address}"
                                     subject="DataPower CSR for ${local.crypto.cn} on device @{device}"
                                     message="Could you please sign the attached Certificate Signing Request - thanks."
                                     att.dir="dist/crypto/@{device}"
                                     att.file="${local.file.name}" />
                </then>
                <else>
                    <echo message=" ***** Sending mail disabled, please make sure the csr (to be found at dist/crypto/@{device}/${local.file.name}) is going to be signd." />
                </else>
            </if>
        </sequential>
    </macrodef>


    <!-- ================================= 
          target: upload-signer-cert              
         ================================= -->
    <target name="upload-signer-cert">
        <echo message="Device is ${current.device} in env ${swat.env.name}." />
        <upload-signer-cert-macro device="${current.device}"
                                  crypto.prefix="${current.crypto.prefix}"
                                  file.name="${current.file.name}" />
    </target>

    <!-- = = = = = = = = = = = = = = = = =
          macrodef: upload-signer-cert-macro          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="upload-signer-cert-macro">
        <attribute name="device" />
        <attribute name="domain" />
        <attribute name="crypto.prefix" />
        <attribute name="file.name" />
        <sequential>
            <!-- Adjust properties for the crypto prefix -->
            <propertycopy name="local.crypto.cn" from="@{crypto.prefix}.cn" />

            <!-- prepare soma-request setfile -->
            <soma-prepare-request-macro soma.request="setfile"
                                        domain="@{domain}"
                                        env="${swat.env.name}"
                                        content.exists="true"
                                        content.dir="master/${swat.env.name}/cert"
                                        content.file="@{file.name}"
                                        tmp.dir="crypto"
                                        dp.file.name="cert:///@{file.name}" />

            <!-- run soma-request setfile on the device -->
            <soma-run-single-request-on-single-device-macro soma.request="setfile"
                                                            device="@{device}"
                                                            tmp.dir="crypto"
                                                            check.response="true" />
        </sequential>
    </macrodef>

    <!-- ================================= 
          target: import-crypto-object              
         ================================= -->
    <target name="import-crypto-object">
        <echo message="Device is ${current.device}, the master device is ${swat.device.master} in env ${swat.env.name}." />
        <if>
            <not>
                <equals arg1="${current.device}" arg2="${swat.device.master}" />
            </not>
            <then>
                <import-crypto-object-macro device="${current.device}"
                                            crypto.prefix="${current.crypto.prefix}"
                                            file.name="${current.file.name}" />
            </then>
        </if>
    </target>

    <!-- = = = = = = = = = = = = = = = = =
          macrodef: import-crypto-object-macro          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="import-crypto-object-macro">
        <attribute name="device" />
        <attribute name="domain" />
        <attribute name="crypto.prefix" />
        <attribute name="file.name" />
        <sequential>
            <!-- prepare soma-request setfile -->
            <soma-prepare-request-macro soma.request="setfile"
                                        env="${swat.env.name}"
                                        domain="@{domain}"
                                        content.exists="true"
                                        content.dir="dist/crypto"
                                        content.file="@{file.name}"
                                        tmp.dir="crypto"
                                        dp.file.name="temporary:///@{file.name}" />

            <!-- run soma-request setfile -->
            <soma-run-single-request-on-single-device-macro soma.request="setfile"
                                                            device="@{device}"
                                                            tmp.dir="crypto"
                                                            check.response="true" />

            <!-- prepare soma-request crypto-import -->
            <soma-prepare-request-macro soma.request="crypto-import"
                                        domain="@{domain}"
                                        env="${swat.env.name}"
                                        tmp.dir="crypto"
                                        dp.file.name="temporary:///@{file.name}"
                                        crypto.prefix="@{crypto.prefix}" />


            <!-- run soma-request crypto-import -->
            <soma-run-single-request-on-single-device-macro soma.request="crypto-import"
                                                            device="@{device}"
                                                            tmp.dir="crypto"
                                                            check.response="true" />
        </sequential>
    </macrodef>

    <!-- = = = = = = = = = = = = = = = = =
          macrodef: export-crypto-object-macro          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="export-crypto-object-macro">
        <attribute name="device" />
        <attribute name="domain" />
        <attribute name="crypto.prefix" />
        <attribute name="file.name" />
        <sequential>
            <!-- Prepare soma-request crypto-export -->
            <soma-prepare-request-macro soma.request="crypto-export"
                                        domain="@{domain}"
                                        env="${swat.env.name}"
                                        tmp.dir="crypto"
                                        file.name="@{file.name}"
                                        crypto.prefix="@{crypto.prefix}" />

            <!-- Run soma-request crypto-export -->
            <soma-run-single-request-on-single-device-macro device="@{device}"
                                                            soma.request="crypto-export"
                                                            tmp.dir="crypto"
                                                            check.response="true" />

            <!-- Prepare soma-request getfile -->
            <soma-prepare-request-macro soma.request="getfile"
                                        domain="@{domain}"
                                        env="${swat.env.name}"
                                        tmp.dir="crypto"
                                        dp.file.name="temporary:///@{file.name}" />

            <!-- Run soma-request getfile -->
            <soma-run-single-request-on-single-device-macro device="@{device}"
                                                            soma.request="getfile"
                                                            tmp.dir="crypto"
                                                            check.response="true" />
        </sequential>
    </macrodef>
</project>