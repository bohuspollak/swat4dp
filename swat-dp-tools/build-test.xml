<?xml version="1.0"?>
<project name="swat-dp-tools.test" default="main" basedir=".">

    <!-- The build.properties file defines the path to local jar files -->
    <property file="build.properties" />

    <!-- The build.properties file defines the path to local jar files -->
    <property file="test.properties" />

    <!-- TARGETS -->
    <target name="main" description="do the normal thing, pack, transfer, and unpack on all relevant machines">
    </target>

    <target name="test" description="Test target">
        <echo message="Test message..." />
    </target>

	<!-- Import the common tasks to all dp-administration -->
	<import file="${basedir}/../swat-dp-tools/macros.xml" />
	
	<property file="${swat.dp.infra}/build.properties" />
	<property file="${swat.dp.infra}/settings/${user.name}.properties" />
		
    <!-- 
		8. TODO Save config
	-->

    <macrodef name="dp-run-soma-request-macro">
        <attribute name="mgmt-prot" />
        <attribute name="mgmt-ip" />
        <attribute name="mgmt-port" />
        <attribute name="mgmt-user" />
        <attribute name="mgmt-pwd" />
        <attribute name="soma-request" />
        <attribute name="soma-response" />
        <sequential>
            <echo message="Running curl with user @{mgmt-user} and pw @{mgmt-pwd}" />
            <exec executable="${curl.exec}">
                <arg value="--data-binary" />
                <arg value="@dist/service-import.xml" />
                <arg value="@{mgmt-prot}://@{mgmt-ip}:@{mgmt-port}/service/mgmt/current" />
                <arg value="-k" />
                <arg value="-u" />
                <arg value="@{mgmt-user}:@{mgmt-pwd}" />
                <arg value="-o@{soma-response}" />
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="base64-encode-macro">
        <attribute name="infile" />
        <attribute name="outfile" />
        <sequential>
            <exec executable="${openSSL-exec}">
                <arg value="enc" />
                <arg value="-base64" />
                <arg value="-in" />
                <arg value="@{infile}" />
                <arg value="-out" />
                <arg value="@{outfile}" />
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="base64-decode-macro">
        <attribute name="infile" />
        <attribute name="outfile" />
        <sequential>
            <exec executable="${openSSL-exec}">
                <arg value="enc" />
                <arg value="-d" />
                <arg value="-base64" />
                <arg value="-in" />
                <arg value="@{infile}" />
                <arg value="-out" />
                <arg value="@{outfile}" />
            </exec>
        </sequential>
    </macrodef>

    <target name="split-export-file" description="test-split-target">
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg.xsl" out="test/out/svc-10-crypto.xcfg">
            <param name="filterObjectTypes" expression="'CryptoKey,CryptoCertificate,CryptoIdentCred,CryptoValCred,CryptoProfile,SSLProxyProfile'" />
        </xslt>
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg.xsl" out="test/out/svc-20-lbgs.xcfg">
            <param name="filterObjectTypes" expression="'WCCService,LoadBalancerGroup'" />
        </xslt>
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg.xsl" out="test/out/svc-30-matching.xcfg">
            <param name="filterObjectTypes" expression="'Matching'" />
        </xslt>
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg.xsl" out="test/out/svc-40-style-policy.xcfg">
            <param name="filterObjectTypes" expression="'StylePolicyAction,StylePolicyRule,StylePolicy'" />
        </xslt>
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg.xsl" out="test/out/svc-60-aux-objects.xcfg">
            <param name="filterObjectTypes" expression="'HTTPUserAgent,URLRewritePolicy,XMLManager'" />
        </xslt>
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg.xsl" out="test/out/svc-70-fsh.xcfg">
            <param name="filterObjectTypes" expression="'HTTPSourceProtocolHandler,HTTPSSourceProtocolHandler'" />
        </xslt>
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg.xsl" out="test/out/svc-80-service.xcfg">
            <param name="filterObjectTypes" expression="'MultiProtocolGateway,WebServiceProxy,HTTPService'" />
        </xslt>
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg.xsl" out="test/out/svc-90-logtargets.xcfg">
            <param name="filterObjectTypes" expression="'LogTarget'" />
        </xslt>
        <xslt processor="trax" in="test/export.xml" style="soma/xsl/split-xcfg-rest.xsl" out="test/out/svc-99-rest.xcfg">
            <param name="filterObjectTypes"
                expression="'CryptoKey,CryptoCertificate,CryptoIdentCred,CryptoValCred,CryptoProfile,SSLProxyProfile,WCCService,LoadBalancerGroup,Matching,StylePolicyAction,StylePolicyRule,StylePolicy,HTTPUserAgent,URLRewritePolicy,XMLManager,HTTPSourceProtocolHandler,HTTPSSourceProtocolHandler,MultiProtocolGateway,WebServiceProxy,HTTPService,LogTarget'" />
        </xslt>
    </target>

    <target name="split-style-policy-wasxml" description="test target">
        <xslt processor="trax" in="test/svc-40-style-policy.xcfg" style="soma/xsl/split-style-policy.xsl" out="test/out/tmp.xcfg">
            <param name="serviceName" expression="wasxml" />
        </xslt>
        <delete file="test/out/tmp.xcfg" />
        <xslt processor="trax" in="test/svc-40-style-policy.xcfg" style="soma/xsl/split-xcfg.xsl" out="test/out/test/out/wasxml-40-style-policy.xcfg">
            <param name="filterObjectTypes" expression="StylePolicy" />
        </xslt>
    </target>

    <target name="combine-xcfg-files" description="test target">
        <xslt processor="trax" in="../kit-swat-dp-svc-wasxml/master/export.xml" style="soma/xsl/combine-xcfg.xsl" out="test/wasxml-export.xml">
            <param name="xcfgSelection" expression="../../../kit-swat-dp-svc-wasxml/xcfg/common/?select=*.xcfg" />
        </xslt>
    </target>

    <target name="split-files" description="test target">
        <delete file="test/out/files.xml" />
        <xslt processor="trax" in="test/wasxml-files.xml" style="soma/xsl/split-files.xsl" out="test/out/files.xml" />
    </target>
	
    <target name="create-repo" description="test target">
        <delete file="test/out/repo.xml" />   
        <xslt processor="trax" in="test/in/export.xml" style="test/create-repo.xsl" out="test/out/repo.xml" />    	
        <delete file="test/out/sorted-repo.xml" />   
        <xslt processor="trax" in="test/out/repo.xml" style="test/sort-repo.xsl" out="test/out/sorted-repo.xml" />
    </target>

    <target name="test-xpath" description="test xpath target">
        <delete file="test/test-out.xml" />
        <xslt processor="trax" in="test/test.xml" style="test/test.xsl" out="test/test-out.xml" />
    </target>

    <target name="test-checksum" description="test checksum target">
        <checksum file="build.properties" algorithm="SHA" property="file.checksum" />
        <echo message="SHA Checksum for the file build.properties is: ${file.checksum}" />
    </target>

    <target name="test-compare-configs" description="Compare two configurations (formerly exported from a dp)">
        <checksum file="foo.bar" property="foobarMD5" />
    </target>

	<target name="test-extract-xpath" depends="declare" description="xyz">
        <!-- Step 7: Check whether there are any objects to delete -->
        <echo message="Step 7: Check whether there are any objects to delete" />
        <get-num-elements-macro input-dir="dist/cleanup"
            input-file="dp-srsx-02-srsx-config-delete.xml" xpath="//*[local-name()='del-config']/*"
            property-name="numElements" />
        <echo message="Number of elements found: ${numElements}" />
    </target>

</project>